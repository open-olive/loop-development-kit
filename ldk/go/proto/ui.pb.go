// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: ui.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GlobalSearchStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Error string `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GlobalSearchStreamResponse) Reset() {
	*x = GlobalSearchStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSearchStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchStreamResponse) ProtoMessage() {}

func (x *GlobalSearchStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchStreamResponse.ProtoReflect.Descriptor instead.
func (*GlobalSearchStreamResponse) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalSearchStreamResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GlobalSearchStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SearchbarStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Error string `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SearchbarStreamResponse) Reset() {
	*x = SearchbarStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchbarStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchbarStreamResponse) ProtoMessage() {}

func (x *SearchbarStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchbarStreamResponse.ProtoReflect.Descriptor instead.
func (*SearchbarStreamResponse) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{1}
}

func (x *SearchbarStreamResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchbarStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GlobalSearchStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GlobalSearchStreamRequest) Reset() {
	*x = GlobalSearchStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSearchStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchStreamRequest) ProtoMessage() {}

func (x *GlobalSearchStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchStreamRequest.ProtoReflect.Descriptor instead.
func (*GlobalSearchStreamRequest) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{2}
}

func (x *GlobalSearchStreamRequest) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type SearchbarStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *SearchbarStreamRequest) Reset() {
	*x = SearchbarStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchbarStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchbarStreamRequest) ProtoMessage() {}

func (x *SearchbarStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchbarStreamRequest.ProtoReflect.Descriptor instead.
func (*SearchbarStreamRequest) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{3}
}

func (x *SearchbarStreamRequest) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

var File_ui_proto protoreflect.FileDescriptor

var file_ui_proto_rawDesc = []byte{
	0x0a, 0x08, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x46, 0x0a, 0x1a, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x43, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x62, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x45, 0x0a,
	0x19, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x61,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xb5, 0x01, 0x0a, 0x02, 0x55, 0x49, 0x12,
	0x5b, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x0f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x61,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x61, 0x72,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ui_proto_rawDescOnce sync.Once
	file_ui_proto_rawDescData = file_ui_proto_rawDesc
)

func file_ui_proto_rawDescGZIP() []byte {
	file_ui_proto_rawDescOnce.Do(func() {
		file_ui_proto_rawDescData = protoimpl.X.CompressGZIP(file_ui_proto_rawDescData)
	})
	return file_ui_proto_rawDescData
}

var file_ui_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ui_proto_goTypes = []interface{}{
	(*GlobalSearchStreamResponse)(nil), // 0: proto.GlobalSearchStreamResponse
	(*SearchbarStreamResponse)(nil),    // 1: proto.SearchbarStreamResponse
	(*GlobalSearchStreamRequest)(nil),  // 2: proto.GlobalSearchStreamRequest
	(*SearchbarStreamRequest)(nil),     // 3: proto.SearchbarStreamRequest
	(*Session)(nil),                    // 4: proto.Session
}
var file_ui_proto_depIdxs = []int32{
	4, // 0: proto.GlobalSearchStreamRequest.session:type_name -> proto.Session
	4, // 1: proto.SearchbarStreamRequest.session:type_name -> proto.Session
	2, // 2: proto.UI.GlobalSearchStream:input_type -> proto.GlobalSearchStreamRequest
	3, // 3: proto.UI.SearchbarStream:input_type -> proto.SearchbarStreamRequest
	0, // 4: proto.UI.GlobalSearchStream:output_type -> proto.GlobalSearchStreamResponse
	1, // 5: proto.UI.SearchbarStream:output_type -> proto.SearchbarStreamResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ui_proto_init() }
func file_ui_proto_init() {
	if File_ui_proto != nil {
		return
	}
	file_session_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ui_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSearchStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchbarStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSearchStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchbarStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ui_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ui_proto_goTypes,
		DependencyIndexes: file_ui_proto_depIdxs,
		MessageInfos:      file_ui_proto_msgTypes,
	}.Build()
	File_ui_proto = out.File
	file_ui_proto_rawDesc = nil
	file_ui_proto_goTypes = nil
	file_ui_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UIClient is the client API for UI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UIClient interface {
	// Event is streamed whenever user hits enter.
	GlobalSearchStream(ctx context.Context, in *GlobalSearchStreamRequest, opts ...grpc.CallOption) (UI_GlobalSearchStreamClient, error)
	// Event is streamed whenever user hits enter.
	SearchbarStream(ctx context.Context, in *SearchbarStreamRequest, opts ...grpc.CallOption) (UI_SearchbarStreamClient, error)
}

type uIClient struct {
	cc grpc.ClientConnInterface
}

func NewUIClient(cc grpc.ClientConnInterface) UIClient {
	return &uIClient{cc}
}

func (c *uIClient) GlobalSearchStream(ctx context.Context, in *GlobalSearchStreamRequest, opts ...grpc.CallOption) (UI_GlobalSearchStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UI_serviceDesc.Streams[0], "/proto.UI/GlobalSearchStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &uIGlobalSearchStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UI_GlobalSearchStreamClient interface {
	Recv() (*GlobalSearchStreamResponse, error)
	grpc.ClientStream
}

type uIGlobalSearchStreamClient struct {
	grpc.ClientStream
}

func (x *uIGlobalSearchStreamClient) Recv() (*GlobalSearchStreamResponse, error) {
	m := new(GlobalSearchStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *uIClient) SearchbarStream(ctx context.Context, in *SearchbarStreamRequest, opts ...grpc.CallOption) (UI_SearchbarStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UI_serviceDesc.Streams[1], "/proto.UI/SearchbarStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &uISearchbarStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UI_SearchbarStreamClient interface {
	Recv() (*SearchbarStreamResponse, error)
	grpc.ClientStream
}

type uISearchbarStreamClient struct {
	grpc.ClientStream
}

func (x *uISearchbarStreamClient) Recv() (*SearchbarStreamResponse, error) {
	m := new(SearchbarStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UIServer is the server API for UI service.
type UIServer interface {
	// Event is streamed whenever user hits enter.
	GlobalSearchStream(*GlobalSearchStreamRequest, UI_GlobalSearchStreamServer) error
	// Event is streamed whenever user hits enter.
	SearchbarStream(*SearchbarStreamRequest, UI_SearchbarStreamServer) error
}

// UnimplementedUIServer can be embedded to have forward compatible implementations.
type UnimplementedUIServer struct {
}

func (*UnimplementedUIServer) GlobalSearchStream(*GlobalSearchStreamRequest, UI_GlobalSearchStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GlobalSearchStream not implemented")
}
func (*UnimplementedUIServer) SearchbarStream(*SearchbarStreamRequest, UI_SearchbarStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchbarStream not implemented")
}

func RegisterUIServer(s *grpc.Server, srv UIServer) {
	s.RegisterService(&_UI_serviceDesc, srv)
}

func _UI_GlobalSearchStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GlobalSearchStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UIServer).GlobalSearchStream(m, &uIGlobalSearchStreamServer{stream})
}

type UI_GlobalSearchStreamServer interface {
	Send(*GlobalSearchStreamResponse) error
	grpc.ServerStream
}

type uIGlobalSearchStreamServer struct {
	grpc.ServerStream
}

func (x *uIGlobalSearchStreamServer) Send(m *GlobalSearchStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _UI_SearchbarStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchbarStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UIServer).SearchbarStream(m, &uISearchbarStreamServer{stream})
}

type UI_SearchbarStreamServer interface {
	Send(*SearchbarStreamResponse) error
	grpc.ServerStream
}

type uISearchbarStreamServer struct {
	grpc.ServerStream
}

func (x *uISearchbarStreamServer) Send(m *SearchbarStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _UI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UI",
	HandlerType: (*UIServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GlobalSearchStream",
			Handler:       _UI_GlobalSearchStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchbarStream",
			Handler:       _UI_SearchbarStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ui.proto",
}
